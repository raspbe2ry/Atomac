@model IEnumerable<Atomac.ViewModels.ListType>

@{
    ViewBag.Title = "Index";
}


<link href="~/Content/Profile.css" rel="stylesheet" />
<link href="~/Content/Shop.css" rel="stylesheet" />
<link href="~/Content/chessboard-0.3.0.css" rel="stylesheet" />

<h2>SHOP</h2>

<div id="tableSide"></div>

<div id="leftSide">
    @foreach (var lis in Model)
    {
        <h2>@lis.name</h2>

        <div class="@lis.name">

            <table class="table">
                <tr>
                    <th>
                        Style
                    </th>
                    <th>
                        Tokens
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in lis.shopModels)
                {
                    <tr>
                        <td>
                            @item.Style
                        </td>
                        <td>
                            @item.Prize
                        </td>
                        <td>
                            @{
                                if (item.Status == Atomac.ViewModels.AStatus.NotActive)
                                {
                                    <input type="button" value="Activate" data-id="@item.Id" data-style="@item.Style" data-prize="@item.Prize" class="actBtn" id="@item.Id" />
                                }
                                if (item.Status == Atomac.ViewModels.AStatus.NeedToBuy)
                                {
                                    <input type="button" class="buyBtn" value="Buy" data-id="@item.Id" data-style="@item.Style" data-prize="@item.Prize" id="@item.Id" />
                                }
                                if (item.Status == Atomac.ViewModels.AStatus.Active)
                                {
                                    <input type="button" class="dacBtn" value="Deactivate" data-id="@item.Id" data-style="@item.Style" data-prize="@item.Prize" id="@item.Id" />
                                }
                            }
                        </td>
                    </tr>
                                }

            </table>
        </div>
                                }
</div>

<hidden id="userId" value="@ViewBag.UserId"></hidden>



@section scripts
{
<script src="~/Scripts/PublicChat.js"></script>
<script src="~/Scripts/chessboard-0.3.0.js"></script>
<script src="~/Scripts/chess.js"></script>
<script src="~/Scripts/side-chess-board.js"></script>
    <script>
        var buyButtons = document.getElementsByClassName("buyBtn");
        var i;
        for (i = 0; i < buyButtons.length; i++) {
            buyButtons[i].addEventListener('click', BuyArtifact);
        }
        var j;
        var actButtons = document.getElementsByClassName("actBtn");
        for (j = 0; j < actButtons.length; j++) {
            actButtons[j].addEventListener('click', ActivateArtifact);
        }

        var k;
        var dacButtons = document.getElementsByClassName("dacBtn");
        for (k = 0; k < dacButtons.length; k++) {
            dacButtons[k].addEventListener('click', DeactivateArtifact);
        }

        function BuyArtifact()
        {
            var artifactId = this.id;
            var userId="@ViewBag.UserId";
            $.ajax({
                type: "POST",
                url: '@Url.Action("BuyArtifact", "Shop")',
                data: { artifactId: artifactId, userId: userId },
                success: function(msg) { ChangeArtifactNotActive(msg) },
                error: function(msg) { alert('Error'); }
            });
        }

        //iz stanja za kupovinu
        function ChangeArtifactNotActive(msg)  
        {
            var str = "" + msg;
            var btn = document.getElementById(str);
            btn.value = 'Activate';
            btn.className = 'actBtn';
            btn.removeEventListener('click', BuyArtifact);
            btn.addEventListener('click', ActivateArtifact);
        }

        function ActivateArtifact()
        {
            var artifactId = this.id;
            var userId = "@ViewBag.UserId";
            $.ajax({
                type: "POST",
                url: '@Url.Action("ActivateArtifact", "Shop")',
                data: { artifactId: artifactId, userId: userId },
                success: function (msg) { SubmitActivateArtifact(msg) },
                error: function (msg) { alert('Error'); }
            });
        }

        function SubmitActivateArtifact(mesg)
        {
            var activated = mesg.activated;
            NotActiveToActive(activated);
            var deactivated = mesg.deactivated;
            ActivetoNotActive(deactivated);
        }

        function ActivetoNotActive(str)
        {
            var btn = document.getElementById(str);
            btn.value = 'Activate';
            btn.className = 'actBtn';
            btn.removeEventListener('click', DeactivateArtifact);
            btn.addEventListener('click', ActivateArtifact);
        }

        function NotActiveToActive(str)
        {
            var btn = document.getElementById(str);
            btn.value = 'Deactivate';
            btn.className = 'dacBtn';
            btn.removeEventListener('click', ActivateArtifact);
            btn.addEventListener('click', DeactivateArtifact);
        }

        function DeactivateArtifact()
        {
            if (this.dataset.style == 'default') {
                document.body.appendChild(
                        GlobalPopUp("Artifact activation", "Manual deactivation of artefact is impossible."
                            , InfoPopUp()));
                $('#myModal').modal('show');
                return;
            }
            var artifactId = this.id;
            var userId = "@ViewBag.UserId";
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeactivateArtifact", "Shop")',
                data: { artifactId: artifactId, userId: userId },
                success: function (msg) { SubmitDeactivateArtifact(msg) },
                error: function (msg) { alert('Error'); }
            });
        }

        function SubmitDeactivateArtifact(mesg)
        {
            var activated = mesg.activated;
            NotActiveToActive(activated);
            var deactivated = mesg.deactivated;
            ActivetoNotActive(deactivated);
            alert(msg);
        }

        var pom= JSON.parse(@ViewBag.TableContext);
        sideBoard = new SideChessBoard('tableSide', '/Content/img/chesspieces/' + pom.figure + '/{piece}.png', [], [], 'black', pom);

    </script>

}